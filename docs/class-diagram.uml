@startuml

namespace std {
	class "vector or\nlist<T>" as ArrayBase
	class "map or\nunordered_map<std::string, T>" as MapBase
}

namespace Polymorphic {
	class "Vector or\nList<T>" as ArrayBase
	class "Map or\nUnorderedMap<std::string, T>" as MapBase
	ArrayBase *-> std.ArrayBase
	MapBase *-> std.MapBase
}

Polymorphic -[hidden]down- std

namespace JXXON {
	class Json {
		+get<T>(name) : T
		+set(name, value)
	}
	
	interface "Json::Serializable" as Json_Serializable {
		+toJson() : Json
	}
	Json_Serializable --+ Json
	
	interface Serializable {
		+toJson() : Json
	}
	Serializable ..> Json_Serializable

	interface "Json::ArrayType" as Json_ArrayType {
		+addElement(element)
		+forEach(function<(element)>)
	}
	Json_ArrayType --+ Json
	
	interface "Json::MapType" as Json_MapType {
		+addElement(key, value)
		+forEach(function<(key, value)>)
	}
	Json_MapType --+ Json
	
	namespace Base {
		class "Vector or\nList<T>" as ArrayBase
		class "Map or\nUnorderedMap<T>" as MapBase
		ArrayBase --|> Polymorphic.ArrayBase
		ArrayBase --|> JXXON.Json_ArrayType
		MapBase --|> Polymorphic.MapBase
		MapBase --|> JXXON.Json_MapType
	}

	class "Json::Array" as Json_Array<T, Base> {
		+Json::Array::Array(json)
		+toJson() : Json
	}
	Json_Array --+ Json
	Json_Array -right-|> Json_Serializable
	Json_Array --|> JXXON.Base.ArrayBase
	
	class Vector<T>
	Vector ..> Json_Array : <T, Base::Vector>
	
	class List<T>
	List ..> Json_Array : <T, Base::List>
	
	class "Json::Map" as Json_Map<T, Base> {
		+Json::Map::Map(json)
		+toJson() : Json
	}
	Json_Map --+ Json
	Json_Map -left-|> Json_Serializable
	Json_Map --|> JXXON.Base.MapBase
	
	class Map<T>
	Map ..> Json_Map : <T, Base::Map>
	
	class UnorderedMap<T>
	UnorderedMap ..> Json_Map : <T, Base::UnorderedMap>
	
	namespace Accessor {
		class GetProperty<T> {
			+operator()() :T
		}
		JXXON.Json --> GetProperty
		
		class SetProperty<T> {
			+operator()(value)
		}
		JXXON.Json --> SetProperty
		
		class GetArrayElements<T> {
			+operator()(array)
		}
		JXXON.Json_Array --> GetArrayElements
		
		class SetArrayElements<T> {
			+operator()(array)
		}
		JXXON.Json_Array --> SetArrayElements

		class GetMapElements<T> {
			+operator()(map)
		}
		JXXON.Json_Map --> GetMapElements
		
		class SetMapElements<T> {
			+operator()(map)
		}
		JXXON.Json_Map --> SetMapElements
	}
}

@enduml
